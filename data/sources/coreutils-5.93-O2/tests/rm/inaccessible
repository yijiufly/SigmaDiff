#!/bin/sh
# Ensure that rm works even when run from a directory
# for which the user has no access at all.

if test "$VERBOSE" = yes; then
  set -x
  rm --version
fi

PRIV_CHECK_ARG=require-non-root . $srcdir/../priv-check

pwd=`pwd`
t0=`echo "$0"|sed 's,.*/,,'`.tmp; tmp=$t0/$$
trap 'status=$?; cd $pwd; chmod -R u+rwx $t0; rm -rf $t0 && exit $status' 0
trap '(exit $?); exit $?' 1 2 13 15

framework_failure=0
mkdir -p $tmp || framework_failure=1
cd $tmp || framework_failure=1
mkdir abs1 abs2 no-access || framework_failure=1

if test $framework_failure = 1; then
  echo "$0: failure in testing framework" 1>&2
  (exit 1); exit 1
fi

fail=0

p=$pwd/$tmp
set +x
(cd no-access; chmod 0 . && rm -r $p/abs1 rel $p/abs2) 2> out && fail=1
test "$VERBOSE" = yes && set -x
test -d $p/abs1 && fail=1
test -d $p/abs2 && fail=1

cat <<\EOF > exp || fail=1
rm: cannot remove `rel': Permission denied
EOF

cmp out exp || fail=1
test $fail = 1 && diff out exp 2> /dev/null

(exit $fail); exit $fail

#!/bin/sh
# Ensure that rm works even from an unreadable working directory.

if test "$VERBOSE" = yes; then
  set -x
  rm --version
fi

PRIV_CHECK_ARG=require-non-root . $srcdir/../priv-check

pwd=`pwd`
t0=`echo "$0"|sed 's,.*/,,'`.tmp; tmp=$t0/$$
trap 'status=$?; cd $pwd; chmod -R u+rwx $t0; rm -rf $t0 && exit $status' 0
trap '(exit $?); exit $?' 1 2 13 15

framework_failure=0
mkdir -p $tmp || framework_failure=1
cd $tmp || framework_failure=1
mkdir -p a/1 b c d/2 e/3 || framework_failure=1

if test $framework_failure = 1; then
  echo "$0: failure in testing framework" 1>&2
  (exit 1); exit 1
fi

fail=0

cd c
chmod u=x,go= .
t=$pwd/$tmp

# With coreutils-5.2.1, this would get a failed assertion.
rm -r $t/a $t/b || fail=1

# With coreutils-5.2.1, this would get the following:
#   rm: cannot get current directory: Permission denied
#   rm: failed to return to initial working directory: Bad file descriptor
rm -r $t/d $t/e || fail=1

test -d $t/a && fail=1
test -d $t/b && fail=1
test -d $t/d && fail=1
test -d $t/e && fail=1

(exit $fail); exit $fail

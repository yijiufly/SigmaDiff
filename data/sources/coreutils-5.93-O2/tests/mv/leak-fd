#!/bin/sh
# Exercise mv's file-descriptor-leak bug, reported against coreutils-5.2.1
# and fixed (properly) on 2004-10-21.

# This test is relatively expensive, and might well evoke a
# framework-failure on systems with a smaller command-line length
# limit so don't run it by default.
. $srcdir/../expensive

if test "$VERBOSE" = yes; then
  set -x
  mv --version
fi

. $srcdir/setup
. $srcdir/../envvar-check
PRIV_CHECK_ARG=require-non-root . $srcdir/../priv-check

pwd=`pwd`
t0=`echo "$0"|sed 's,.*/,,'`.tmp; tmp=$t0/$$
trap 'status=$?; cd $pwd; chmod -R u+rwx $t0; rm -rf $t0 && exit $status' 0
trap '(exit $?); exit $?' 1 2 13 15

if test -z "$other_partition_tmpdir"; then
  (exit 77); exit 77
fi
t0="$t0 $other_partition_tmpdir"

framework_failure=0
mkdir -p $tmp || framework_failure=1
cd $tmp || framework_failure=1

b="0 1 2 3 4 5 6 7 8 9
a b c d e f g h i j k l m n o p q r s t u v w x y z
A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"

for i in `echo $b`; do
  echo $i
  for j in $b; do
    echo $i$j
  done
done > .dirs
mkdir `cat .dirs` || framework_failure=1
sed 's,$,/f,' .dirs | xargs touch

last_file=`tail -n1 .dirs`/f
test -f $last_file || framework_failure=1

if test $framework_failure = 1; then
  echo "$0: failure in testing framework" 1>&2
  (exit 1); exit 1
fi

fail=0

mv * $other_partition_tmpdir || fail=1
test -f ZZ/f && fail=1
rm .dirs

ls -A > ../out || fail=1
test -s ../out && fail=1

(exit $fail); exit $fail
